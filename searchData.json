[{"title":"Chrome字体发虚解决方法","url":"/2019/01/11/Chrome字体发虚解决方法/","content":"\n\n\n## 说明\n\nWindows 客户端上的 Chrome 浏览器，遇到某些网站字体发虚的解决方法。\n\n利用 Stylus chrome 插件的修改网页样式功能，强制让网页显示「微软雅黑」字体。\n\n\n\n## 使用效果\n\n![001.png](https://i.loli.net/2019/01/11/5c389a3d994ed.png)\n<center>[点击查看大图](https://i.loli.net/2019/01/11/5c389a3d994ed.png)</center>\n\n\n\n## 如何使用\n\n**1. ** 安装 Stylus 网页样式管理器\n\nStylish 是一款 CSS 编辑器，用户可以使用它为网站创建自定义样式，安装主题和皮肤。它支持多种浏览器，仅 Chrome 浏览器就有超过 186 万用户。\n\nPS.知名浏览器扩展 Stylish 因涉嫌窃取用户浏览历史，被 Chrome 和 Firefox 下架。\n\n[点击此处](https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne) 在 Chrome 网上应用店获取该插件。\n\n\n\n**2.** 安装完成后，右键 工具栏的 Stylus 图标，选择「打开样式管理器」。\n\n**3.** 左边菜单找到 「编写新样式」按钮。\n\n**4.** 左边菜单填写样式名称，右边代码块中填入以下代码，保存！\n\n```\n@charset \"utf-8\";\nbody * { font-family: \"Microsoft YaHei\",\"weiruanyahei\",\"PingFang SC\",Tahoma,SimSun}\n* {text-shadow: silver 0px 0px 0px ;}\n```\n\n**示意图：**\n![Stylus.png](https://i.loli.net/2019/01/11/5c3899e038125.png)\n<center>[点击查看大图](https://i.loli.net/2019/01/11/5c3899e038125.png)</center>\n\n## 完成\n\n接下来再打开那些字体发虚的网页查看一下，效果比没有使用插件要好。","tags":["chrome","windows"]},{"title":"SublimeText","url":"/2018/12/13/SublimeText/","content":"\n# 安装 python\n\n#### 访问官方 [下载地址](https://www.python.org/downloads/) ，选择 python 版本\n![01.png](https://i.loli.net/2018/12/08/5c0b5a8800f4f.png)\n\n####  下载安装文件\n![02.png](https://i.loli.net/2018/12/08/5c0b5a867e04c.png)\n\n以64位为例，点击 `Windows x86-64 executable installer` 下载安装文件。\n其他文件说明：\n- 帮助文件：Windows help file\n- 基于网页的安装程序： Windows x86-64 web-based installer\n- 可执行的安装程序： Windows x86-64 executable installer\n- python程序的压缩包： Windows x86-64 embeddable zip file\n\n#### 下载完成后打开文件，这里以 64位 3.7.1 版本为例\n![03.png](https://i.loli.net/2018/12/08/5c0b5a82a64f4.png)\n\n1. 选择 `Install Now` 会默认将 python 安装在 C 盘目录下。默认路径有点深，为了方便以后找 python 安装路径，**不选**这个。\n2. 勾选 `Add Python 3.6 to PATH` 将 Python 安装路径添加到计算机系统环境变量的 Path 变量中，就少一步手动添加环境变量。\n3. 选择 `Customize installation` 自定义安装。\n\n#### 默认全选，点 Next 继续\n![04.png](https://i.loli.net/2018/12/08/5c0b5a833c005.png)\n\n#### 要勾选上 `Install for all users` 才可以自定义安装路径\n![05.png](https://i.loli.net/2018/12/08/5c0b5a82afd58.png)\n\n#### 等待安装完成\n![06.png](https://i.loli.net/2018/12/08/5c0b5a8205547.png)\n![07.png](https://i.loli.net/2018/12/08/5c0b5a828f203.png)\n\n#### 验证一下是否安装成功\n快捷键 `Win+R`，输入 `CMD` 后回车，打开命令提示符。输入 `python`，出现以下提示，安装成功。\n![08.png](https://i.loli.net/2018/12/08/5c0b5a789578e.png)\n\n----\n# SublimeText3 配置\n\n## 1. 配置 python 开发环境\n\n1. 菜单栏 > 工具 (Tools) > 编译系统 (Build System) > 新建编译系统... (New Build System..)\n\n2. 生成一个空配置文件，将代码框内的文字复制过去后，文本中 `C:\\\\Python\\\\python.exe` 路径换成 python 实际安装路径，注意区分正反斜杠，Ctrl+S 保存，命名为 「python3.7」。\n\n```\n{\n\t\"encoding\": \"utf-8\",\n\t\"working_dir\": \"$file_path\",\n\t\"shell_cmd\": \"C:\\\\Python\\\\python.exe -u \\\"$file\\\"\",\n\t\"file_regex\": \"^[ ]*File \\\"(...*?)\\\", line ([0-9]*)\",\n\t\"selector\": \"source.python\"\n}\n```\n![python 编译系统](https://i.loli.net/2018/12/13/5c12085d78dad.png)\n\n3. 菜单栏 > 工具 (Tools) > 编译系统 (Build System)，选择刚才建好的 Python3.7 即可。\n\n4. 新建「test.py」文件，输入简单语句 `print(\"hello word\")`，快捷键 Ctrl+S 保存后按 Ctrl+B 运行。\n\n![10.png](https://i.loli.net/2018/12/13/5c12091bd5bd2.png)\n\n展示正常就成功了，但是这个界面没有交互功能，如 `input()` 在这里是无法输入的。需要另外安装插件实现交互。\n\n\n## 2. 安装插件管理器 Package Control\n\n我下载的安装包 [Sublime text 3 build 3176 绿色中文版](http://www.dayanzai.me/sublime-text-3.html) 已经自带了「插件管理器 (Package Control)」，如果用别的安装包里面没有自带，先试试：菜单栏 > 工具 (Tools) > 安装插件管理器 (Install Package Control)，没有这个选项的话另外上网找方法。\n\n安装完成后打开：菜单栏 > 首选项 (Preferences) 可以看到多了一个「插件管理器 (Package Control)」的菜单。\n\n### 使用方法\n按下 菜单栏 > 首选项 (Preferences) > 插件管理器 (Package Control)，快捷键是 Ctrl+Shift+P，调出命令面板。在列表中输入命令或关键字，根据命令面板中的过滤结果，选择要执行的操作。\n\n![11.png](https://i.loli.net/2018/12/13/5c120cb4bd238.png)\n\n通过简单的几个命令就可以方便的管理我们的插件：\n\n- 安装其他插件：输入`ip` 调出 `Install Package`\n- 查看已安装的插件：输入`lp`，调出 `Package Control:list packages`\n- 删除插件：输入 `remove`，调出 `Package Control:Remove Package`\n- 更新插件：输入 `up`，调出 `upgrade packages`\n\n## 3. 安装插件\n### SublimeREPL 插件\n功能：运行当前 Python 文件，弹出的页面有交互功能。\n1. 按下 Ctrl+Shift+P 调出命令面板，输入`ip`，选择关联出来的 `Package Control:install package`\n2. 弹出新的窗口后输入 `SublimeREPL` 回车，左下角会显示正在传输数据。\n3. 安装完成，菜单栏 > 工具 (Tools) > SublimeREPL > Pyhton > Pyhton - RUN current file， 运行后弹出新的标签页就是有交互功能的 Python 编译系统。\n4. 绑定运行的快捷键，菜单栏 > 首选项 (Preferences) > 快捷键设置 (Key Bindings) ，代码复制过去后 Ctrl+S 保存。\n```\n[ \n   \t{\n    \"keys\":[\"f5\"],\n    \"caption\": \"SublimeREPL: Python - RUN current file\",\n    \"command\": \"run_existing_window_command\", \"args\": {\"id\": \"repl_python_run\",\n    \"file\": \"config/Python/Main.sublime-menu\"}\n    }\n]\n```\n绑定完成，以后按快捷键 F5 就可以弹出交互界面。\n\n![12.png](https://i.loli.net/2018/12/13/5c12119fcc7a7.png)\n\n### sublimecodeintel 插件\n功能：代码补全\n1. 按下 Ctrl+Shift+P 调出命令面板，输入`ip`，选择关联出来的 `Package Control:install package`\n2. 弹出新的窗口后输入 `sublimecodeintel` 回车，左下角会显示正在传输数据，这个插件比较大，弹出一个标签页表示安装成功，重启软件后生效。\n\n### Anaconda 插件\n\n功能：更好的代码补全\n[Anaconda 的 github 文档](http://damnwidget.github.io/anaconda/)\n\n#### 安装：\n\n1. 按下 Ctrl+Shift+P 调出命令面板，输入`ip`，选择关联出来的 `Package Control:install package`\n2. 弹出新的窗口后输入 `anaconda` 回车，左下角会显示正在传输数据，这个插件比较大，弹出一个标签页表示安装成功，重启软件后生效。\n\n#### 正确配置 Anaconda：\n\n[正确配置 Anaconda 的 github 文档](http://damnwidget.github.io/anaconda/anaconda_settings/)\n\n由于 Anaconda 插件本身无法知道 Python 的安装路径，所以需要设置 Python 主程序的实际位置。\n\n1. 全局设置：\n    进入 [ 菜单栏 > 首选项  (Preferences) > Package Settings > Anaconda > Settings-Default ] 打开文档。Ctrl+F 搜索 `python_interpreter` 关键字，路径改成 Python 主程序位置的路径，修改后 Ctrl+S 保存。\n```\n\"python_interpreter\": \"‪D:/python/python.exe\",\n```\n2. 继续在这个文档 Ctrl+F 搜索 `auto_python_builder_enabled` 关键字，修改后 Ctrl+S 保存。\n\n```\n\"auto_python_builder_enabled\": false,\n```\n\n3. 用户设置：\n    进入 [ 首选项 (Preferences) > Package Settings > Anaconda > Settings-User ] 打开文档，粘贴以下代码后 Ctrl+S 保存。\n``` \n{\n\t\"python_interpreter\":\"D:/python/python.exe\",\n\t\"suppress_word_completions\":true,\n\t\"suppress_explicit_comletions\":true,\n\t\"complete_parameters\":false,\n    \"auto_python_builder_enabled\": false,\n    \"anaconda_linting\": false\n}\n```\n5. 去掉代码边上的白框\n    安装完成之后，许多代码周围有白框，白框是由于代码不符合 PEP8 规范被 anaconda 高亮了出来。这个规范主要是缩进，import 等的一些格式规范。\n    关闭提示方法：\n    进入 [ 首选项 (Preferences) > Package Settings > Anaconda > Settings-User ] 打开文档，添加\n    `\"anaconda_linting\": false`（上面的用户设置里已经有这条）\n\n#### 补全无反应\n\n1. 打开 [ 首选项 (Preferences) > 浏览插件目录 (Browser Packages) ]\n2. 新建文件夹，命名为 「python」。\n3. 打开 SublimeText3 软件，新建一个文件，粘贴以下代码。\n``` \n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>scope</key>\n    <string>source.python</string>\n    <key>settings</key>\n    <dict>\n        <key>cancelCompletion</key>\n        <string>^(.*\\b(and|or)$)|(\\s*(pass|return|and|or|(class|def)\\s*[a-zA-Z_0-9]+)$)</string>\n    </dict>\n</dict>\n</plist>\n```\nCtrl+S 保存到新建的 Python 文件夹中。命名为 `Completion Rules.tmPreferences`，不用后缀，有也去掉。\n4. 删除 SublimeText3安装目录 `...\\Data\\Cache\\Python` 文件夹里的全部缓存文件。\n5. 重启 SublimeText3 软件，完成。\n\n## 4. 主题插件\n\n[Colorsublime](https://packagecontrol.io/packages/Colorsublime) 的配色方案插件 \n\n1. 按下 Ctrl+Shift+P 调出命令面板，输入`ip`，选择关联出来的 `Package Control:install package`\n2. 弹出新的窗口后输入 `ColorSublime` 回车。\n3. 安装完成后，按下 Ctrl+Shift+P 调出命令面板，输入`Colorsublime: Install Theme`。\n4. 使用键盘上下方向键浏览主题 「配色方案」并实时查看当前文本的变化。\n\n官方操作效果演示：\n![13.gif](https://i.loli.net/2018/12/13/5c121af817b6d.gif)\n\n暗：\n1337\nhumble\nboron\nGithub_Dark\n亮：\nCandyLand\nflat\nIDLE\nGithub_Light\n\n[其他主题参考](https://github.com/dempfi/ayu)\n\n## 5. 右键菜单显示 `用SublimeText3打开`\n1. 复制以下代码，新建一个文本。保存到 SublimeText3 的安装目录下，命名为 `安装右键菜单.inf`。\n\n```\n[Version]\nSignature=\"$Windows NT$\"\n\n[DefaultInstall]\nAddReg=SublimeText3\n\n[SublimeText3]\nhkcr,\"*\\\\shell\\\\SublimeText3\",,,\"用 SublimeText3 打开\"\nhkcr,\"*\\\\shell\\\\SublimeText3\\\\command\",,,\"\"\"%1%\\sublime_text.exe\"\" \"\"%%1\"\" %%*\"\nhkcr,\"Directory\\shell\\SublimeText3\",,,\"用 SublimeText3 打开\"\nhkcr,\"*\\\\shell\\\\SublimeText3\",\"Icon\",0x20000,\"%1%\\sublime_text.exe, 0\"\nhkcr,\"Directory\\shell\\SublimeText3\\command\",,,\"\"\"%1%\\sublime_text.exe\"\" \"\"%%1\"\"\"\n```\n\n2. 右键这个文件选择 `安装`，完成。\n\n![14.png](https://i.loli.net/2018/12/13/5c121c0c685a2.png)\n\n\n\n## 快捷键\n\nCtrl+D 选词 （反复按快捷键，即可继续向下同时选中下一个相同的文本进行同时编辑）\nCtrl+G 跳转到相应的行\nCtrl+J 合并行（已选择需要合并的多行时）\nCtrl+L 选择整行（按住-继续选择下行）\nCtrl+M 光标移动至括号内开始或结束的位置\nCtrl+T 词互换\nCtrl+U 软撤销\nCtrl+P 查找当前项目中的文件和快速搜索；输入 @ 查找文件主标题/函数；或者输入 : 跳转到文件某行；\nCtrl+R 快速列出/跳转到某个函数\nCtrl+K Backspace 从光标处删除至行首\nCtrl+K+B 开启/关闭侧边栏\nCtrl+KK 从光标处删除至行尾\nCtrl+K+T 折叠属性\nCtrl+K+U 改为大写\nCtrl+K+L 改为小写\nCtrl+K+0 展开所有\nCtrl+Enter 插入行后（快速换行）\nCtrl+Tab 当前窗口中的标签页切换\n\n\nCtrl+Shift+A 选择光标位置父标签对儿\nCtrl+Shift+D 复制光标所在整行，插入在该行之前\nctrl+shift+F 在文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找\nCtrl+Shift+K 删除整行\nCtrl+Shift+L 鼠标选中多行（按下快捷键），即可同时编辑这些行\nCtrl+Shift+M 选择括号内的内容（按住-继续选择父括号）\nCtrl+Shift+P 打开命令面板\nCtrl+Shift+/ 注释已选择内容\nCtrl+Shift+↑可以移动此行代码，与上行互换\nCtrl+Shift+↓可以移动此行代码，与下行互换\nCtrl+Shift+[ 折叠代码\nCtrl+Shift+] 展开代码\nCtrl+Shift+Enter 光标前插入行\n\n\nCtrl+PageDown 、Ctrl+PageUp 文件按开启的前后顺序切换\n\n\nCtrl+Z 撤销\nCtrl+Y 恢复撤销\nCtrl+F2 设置/取消书签\nCtrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果）\nCtrl+鼠标左键 可以同时选择要编辑的多处文本\n\n\nShift+鼠标右键（或使用鼠标中键）可以用鼠标进行竖向多行选择\nShift+F2 上一个书签\nShift+Tab 去除缩进\nAlt+Shift+1（非小键盘）窗口分屏，恢复默认1屏\nAlt+Shift+2 左右分屏-2列\nAlt+Shift+3 左右分屏-3列\nAlt+Shift+4 左右分屏-4列\nAlt+Shift+5 等分4屏\nAlt+Shift+8 垂直分屏-2屏\nAlt+Shift+9 垂直分屏-3屏\n\n\nCtrl+Shift+分屏序号 将当前焦点页分配到分屏序号页\n\n\nAlt+. 闭合当前标签\nAlt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑\n\n\nTab 缩进 自动完成\nF2 下一个书签\nF6 检测语法错误\nF9 行排序(按a-z)\nF11 全屏模式\n\n[快捷键原文地址](https://blog.csdn.net/moyan_min/article/details/11530751)\n\n----"},{"url":"/2018/11/01/CloudApp图床/","content":"<div class=\"header\"><img src=\"https://cl.ly/iNp2/cloudapp-1612081722.jpg\" title=\"\" style=\"\"></div>\n\n## 各种图床\n- [Droplr](http://droplr.com/)：免费用户保存七天。之前 $20 终身会员活动看起来太夸张没入手。\n- [新浪图床](http://weibotuchuang.sinaapp.com/)：管理不了上传的图片。\n- [sm.ms](https://sm.ms/)：非常方便，但不能注册，也就不能管理上传的图片，适合随便传传。\n- [Imgur](http://m.imgur.com/)：不稳\n- [Flickr](https://www.flickr.com)：墙\n- [贴图库](http://www.tietuku.com/)：三块五毛好像用的这个，但现在收费了，免费用户保存六个月后销毁文件。(可以用于随便传传但能自己删除)\n- [又拍云](https://www.upyun.com/)：收费，上手难\n- [阿里云](https://www.aliyun.com/)：收费，上手难\n- [牛七云](http://www.qiniu.com/)：免费使用 10G，一注册发现要手机验证，接着还要实名认证，马上黑人问号脸。国内的服务通常隐私就都不当回事一样，果然随便找了个用这个服务的图片，访问前半段地址，就能看见一些文件目录，也就看见了这个用户的其他图片。关于这点 CloudApp 我好像特地试过普通访问做不到这点。\n\n## CloudApp\n\n[CloudApp](https://cl.ly/) 是一款轻量级的云存储服务，它允许用户在线分享书签、图片、音乐、视频以及任意格式的数字文件到 CloudApp 服务器上；并提供了超简洁的短地址以便用户在多个平台上，尤其是在手机端即时的预览或者下载得到这些文件。\n定价:\n![](https://cl.ly/2A0l0Q0v2b0x/cloudapp-1612030415.jpeg)\n\n支持平台：macOS、Windows、Web、iOS\n[点击下载](https://my.cl.ly/download_app)\n\n----\n\n## 文件分类\n\n![](https://cl.ly/1S2r3p3D2N3O/cloudapp-1612030418.jpeg)\n\n搜了下[官方帮助论坛](https://get.cloudapp.help/hc/en-us/community/posts/218061147-Organizing-files-folders-)，目前只能用已有的类别分类，不能自己创建文件夹。\n\n![](https://cl.ly/3W0l3U411O0i/cloudapp-1612030417.jpeg)\n但是文件一多靠这些类别不好管理，其他图床都没合适的，还是自己定义下**文件命名规则**当分类吧。\n毕竟这个没别的那么多问题，只是不知道免费用户能保存多久。\n\n### 命名规则\n一张图片的直接访问地址是这样的：\n```\nhttps://cl.ly/iJ9Y/image.png\n```\n```\nhttps://cl.ly/编号/文件名.格式\n```\n「编号」：上传文件后系统随机生成，之后更改文件名，编号也没改变。\n「文件名」：可以自己设定，如果之后更改文件名，原来的文件名和新文件名都能访问到图片。\n**在文件名的部分，设定固定格式的「分类编号」就可以文件归类。**(起码搜索起来是这么回事)\n![](https://cl.ly/iK88/cloudapp-1612031155.png)\n文件名被拆分成「分类编号」和「日期」，用`-`符号隔开。\n链接就变成了：\n```\nhttps://cl.ly/iJ9Y/cloudapp-1612012206.png\n```\n```\nhttps://cl.ly/编号/分类编号-日期.格式\n```\n\n这样每个文件就有固定的分类在文件名里，搜索起来就能靠关键字获得分类，找到所有带有这个「分类编号」的文件。\n\n\n## 上传文件\n\n- **Web 和 Windows** \n![](https://cl.ly/iOpo/cloudapp1612092143.gif)\n加入文件命名规则后，都可以用 Total Commander [^1] 软件，根据之前设定的格式[批量重命名](https://xbeta.info/studytc/tc004.htm)后拖拽多个文件到窗口上传文件，但不能一起获取地址。\n\n- **iOS**\n\n官方 App是 [CloudApp](https://itunes.apple.com/cn/app/cloudapp-mobile/id592725830?mt=8&uo=4)，还有一些第三方的应用，有些是收费的，全都很久很久没更新过。\n做了个「CloudApp上传图片|链接」的 Workflow [^2]。[动作下载](https://workflow.is/workflows/d42c630f00c443cf8dc1b352463b1408)\n\n用**固定格式**去命名文件，上传到 CloudApp 再复制这个文件的「原始链接」到剪贴板。\n![](https://cl.ly/2e383d1h080E/cloudapp-1612031704.jpeg)\n动作预览：\n![](https://cl.ly/0y373u2g1R32/cloudapp-1612032136.gif)\n\n## 获取链接\n\n- **网页版**\n\n进入文件点击右上角【•••】按钮选择需要的链接，点击访问。旁边的小图标可以复制链接到剪贴板。\n\n![](https://cl.ly/iOFV/cloudapp-1612081739.jpg)\n<span style=\"color: #808080;\"><center><u>[查看大图](https://cl.ly/iOFV/cloudapp-1612081739.jpg)</u></center></span>\n\n- **iOS**\n\n> Workflow 结合 API 使用的详细介绍文章：\n[JailbreakHum](http://weibo.com/2208752785)：[Workflow 教程（七）：征服 Workflow 中的最高峰 - 少数派](http://sspai.com/30870)\n\n参考[「CloudApp官方API文档」](https://github.com/cloudapp/api/blob/master/README.md#the-cloudapp-api)做了「CloudApp 获取链接」的 Workflow。[动作下载](https://workflow.is/workflows/4bc1c53157ef4d3f819ce37e3925d3df)\n\n### 获取数据\n![](https://cl.ly/373m1I1f3J2t/cloudapp-1612051200.jpeg)\n根据官方文档给出的信息「HTTP请求」的网址是:\n```\nhttps://my.cl.ly/v3/items\n```\n默认获取 20 个项目数，如果要获取 100 个项目，参数是`per_page`，要把`Text`动作里的网址改成:\n```\nhttps://my.cl.ly/v3/items?&per_page=100\n```\n\n在 Workflow 的`Text`动作里放入这个网址，用`Get Contents of URL`动作里「GET」的方法请求。接着在`Get Dictionary Value`动作里输入`data`，需要的数据都在`data`下面。\n动作截图:\n![](https://cl.ly/213A0D0K3K1Z/cloudapp-1612050701.png)\n\n![](https://cl.ly/1j3P2d0S0m03/cloudapp-1612050500.jpeg)\n运行动作会得到`Data`的数据，根据需要，继续使用`Get Dictionary Value`动作，获取不同的「参数」所对应的数据。\n`Slug`(编码)，`name`(文件名)，`created_at`(创建日期)，`item_type`(文件类型)\n\n### 批量获取指定文件的数据\n**搜索「分类」或「日期」，批量提取包含「指定关键字」的所有文件链接。**\n第一步，设置重复动作，`data`里有很多文件的参数，先提取第一个文件数据。\n第二步，获取**「分类/日期」**的参数，用`If`动作识别出是不是包含**「指定关键字」**的文件。标记序号，获得`Data`里这个序号的数据，提取该文件的详情。(编码、文件名、创建日期、文件类型)\n<span style=\"color: #808080;\">*假设我要需要「分类」里包含「CloudApp」的文件。获得第一个数据后，提取「文件名」，接着用`If`动作判断是不是包含「CloudApp」。*</span>\n第三步，在「第一次重复」的尾端，添加一个`Add to Variable`动作，再继续提取第二个文件数据。每个重复动作完成时就会将数据追加到同一个变量里。\n第四步，重复结束，提取「合集」的变量。\n动作预览:\n![](https://cl.ly/iKhI/cloudapp-1612051054.gif)\n每次都会把之前上传的一并获取。所以自定义的「分类」后面的文件名部分用日期就更直观分辨哪几张是刚传上去的。\n### 输入搜索\n为了不用每次都输入文字，这个 Wrokflow 设定了选择搜「分类」或「日期」中的相关文件。如果要同时指定，可以选择「输入搜索」同时输入`分类-日期`，如`CloudApp-1612041030`，日期不完整也可以，因为上传时统一设定文件名中「分类」后面就是「日期」，这里搜索的就是文件名。\n![](https://cl.ly/0Z050y233843/cloudapp-1612050459.png)\n\n### 删除文件\n![](https://cl.ly/080K1Z2c120G/cloudapp-1612050500.jpeg)\n根据官方文档，请求时方法要用`DELETE`，在请求的网址后面加上`<ID>`，这个 ID 就是指定文件的编码。如：\n```\nhttps://my.cl.ly/v3/items/iNp2\n```\n\n但是 Workflow 设定的已有方法里，没有`DELETE`。\n![](https://cl.ly/0v2n253h1m1S/cloudapp-1612061659.png)\n用`Text`写个 DELETE 设置成变量也可以删除成功。\n![](https://cl.ly/1e0k0a1Y1l0W/cloudapp-1612061659.jpeg)\n动作预览：\n![](https://cl.ly/iPPe/cloudapp-1612092142.gif)\n\n\n\n\n## 链接说明\n### 链接的形式\n上传文件后可以获得该文件几种不同形式的链接。\n\n![](https://cl.ly/iNsC/cloudapp-1612081753.jpg)\n\n**原始链接(长链接)：**\n```\nhttps://cl.ly/iNp2/cloudapp-1612081722.jpg\n```\n\n「固定域名+系统随机生成编码+文件名+格式」，这是一个完整的文件链接。\n\n**安全链接(短链接)：**\n```\nhttps://cl.ly/iNp2\n```\n只有「固定域名+系统随机生成编码」，一般是「大小写字母和数字」混合组成4位数编码，也可以生成12位数的编码。\n- 网页版可以选择文件后点击「Go」左边的小三角，选择「Lengthen link」延长链接。\n![](https://cl.ly/3i2Y1S352B2t/cloudapp-1612050557.jpeg)\n- iOS 可以通过Workflow 上传文件时选择。\n![](https://cl.ly/1K2q1y3H0p1d/cloudapp-1612050604.jpeg)\n\n**注：除了「Bookmarks」以外的文件，访问安全链接都只会在 「CloudApp 的网页版」里打开。**\n\n![](https://cl.ly/iOKc/cloudapp-1612081735.jpeg)\n\n### 不同文件的链接\n**网页链接(Bookmarks)**\n上传地址，获得短链接，访问短链接会自动跳转到原始地址。\n**图片链接**\n安全链接（短链接）会在 CloudApp 网页版中打开，不能直接访问到图片文件。想用短连接分享图片，可以用图片的`原始链接地址`当作「Bookmarks」上传，获得`该原始地址的短链接`，访问这个`新的短链接`会跳转到上传「Bookmarks」时的原始地址。\n**文本链接**\n只能访问文本的短链接在 CloudApp 网页版中查看，或者下载文件。访问 TXT 格式文件的原始链接会显示乱码。\n\n```\n文本1\n文本2\n文本3\n```\n\n\n\n[^1]: **Total Commander**，一个强大的文件管理软件，可以做到用很详细的规则去批量重命名文件。[官方网站](http://www.ghisler.com/)、[善用佳软 Total Commander系列教程](http://xbeta.info/studytc/index.htm)\n\n[^2]: **Workflow**，一款能够缩短操作流程的效率工具，它能一键分享你正在听的音乐、把你不认识的句子译成中文、分享图片到微信后自动删除……它可以完成很多事情，更能让进阶用户自由定制以满足特定需求。[下载应用](https://itunes.apple.com/cn/app/workflow-powerful-automation/id915249334?mt=8&uo=4) 、[少数派 Workflow 系列教程](http://sspai.com/tag/Workflow)\n\n"},{"title":"Hello World","url":"/2018/11/01/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]